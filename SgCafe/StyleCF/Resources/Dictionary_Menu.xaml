<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:StyleCF.Resources">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/StyleCF;component/Color.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <!--menu-->
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
       TargetType="Separator">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="0,4,0,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border Height="1" Margin="28,0,0,0" CornerRadius="0.5" Background="{DynamicResource clEnibFalse}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="TopLevelHeader" TargetType="MenuItem">
        <Grid>
            <Border Name="mc_Border" Background="{TemplateBinding Background}" Opacity="0.7" BorderThickness="1" HorizontalAlignment="Left" VerticalAlignment="Bottom" CornerRadius="9" Margin="0, 3" Padding="25,0">
                <Label x:Name="LHeader" Margin="0,-3" Content="{TemplateBinding Header}"/>
            </Border>
            <Popup Name="ct_Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Fade">
                <Border Name="ct_border" Opacity="0.9" BorderThickness="1" HorizontalAlignment="Left" VerticalAlignment="Bottom" CornerRadius="5" Margin="0" Padding="2,1,2,0" Width="250" Background="{DynamicResource clHePoBackMeIt}" BorderBrush="{DynamicResource clHePoBruMeIt}">
                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" Value="{StaticResource clSelectMenuItem}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="LHeader" Property="Foreground" Value="{StaticResource clEnibFalse}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSuspendingPopupAnimation" Value="true"/>
                    <Condition Property="IsHighlighted" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource clSeledBacMeIt}"/>
                <Setter TargetName="mc_Border" Property="BorderBrush" Value="{StaticResource clSeledBruMeIt}"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="TopLevelItem" TargetType="MenuItem">
        <Grid>
            <Border Name="mc_Border" Background="{TemplateBinding Background}" Opacity="0.7" BorderThickness="1" HorizontalAlignment="Left" VerticalAlignment="Bottom" CornerRadius="9" Margin="0, 3" Padding="25,0">
                <Label x:Name="LHeader" Margin="0,-3" Content="{TemplateBinding Header}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="{StaticResource clSelectMenuItem}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SubmenuHeader" TargetType="MenuItem">
        <Border Name="Border" Margin="0,-2">
            <Grid>
                <Border Name="mc_border" Opacity="1" BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CornerRadius="8" Margin="0,3">
                    <Grid Margin="0,-3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                            <ColumnDefinition Width="13"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter Name="Icon" Margin="2,3,6,3" VerticalAlignment="Center" ContentSource="Icon" Width="16" Height="16"/>
                        <Label Name="HeaderHost" Grid.Column="1" Content="{TemplateBinding Header}"/>
                        <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Height="15" DockPanel.Dock="Right" HorizontalAlignment="Right"/>
                        <Path x:Name="IHeaderPa" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="#FF151513" />
                    </Grid>
                </Border>
                <Popup Name="Popup" Placement="Right" HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                    <Border Name="ct_border" Opacity="0.9" BorderThickness="1" HorizontalAlignment="Left" VerticalAlignment="Bottom" CornerRadius="5" Padding="2,0,2,0" Width="200" Background="{DynamicResource clHePoBackMeIt}" BorderBrush="{DynamicResource clHePoBruMeIt}">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="ct_border" Property="CornerRadius" Value="4"/>
                <Setter TargetName="ct_border" Property="Padding" Value="0,3,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Icon" Property="Opacity" Value="0.5"/>
                <Setter TargetName="HeaderHost" Property="Foreground" Value="{StaticResource clEnibFalse}"/>
                <Setter TargetName="InputGestureText" Property="Foreground" Value="{StaticResource clEnibFalse}"/>
                <Setter TargetName="IHeaderPa" Property="Fill" Value="{StaticResource clEnibFalse}"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="mc_border" Property="Background" Value="{StaticResource clSelectMenuItem}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSuspendingPopupAnimation" Value="true"/>
                    <Condition Property="IsHighlighted" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="mc_border" Property="Background" Value="{StaticResource clSeledBacSuIt}"/>
                <Setter TargetName="mc_border" Property="BorderBrush" Value="{StaticResource clSeledBruMeIt}"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SubmenuItem" TargetType="MenuItem">
        <Border Name="Border" Margin="0,-2">
            <Grid>
                <Border Name="mc_border" Opacity="1" BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" CornerRadius="8" Margin="0,3">
                    <Grid Margin="0,-3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                            <ColumnDefinition Width="13"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter Name="Icon" Grid.Column="0" Margin="2,3,6,3" VerticalAlignment="Center" ContentSource="Icon" Width="16" Height="16"/>
                        <Label Name="HeaderHost" Grid.Column="1" Content="{TemplateBinding Header}"/>
                        <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" DockPanel.Dock="Right" Height="15"/>
                        <Border Name="Check" Width="13" Height="13" Visibility="Collapsed" Margin="6,0,6,0" BorderThickness="1">
                            <Path Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                        </Border>
                    </Grid>
                </Border>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Icon" Property="Opacity" Value="0.5"/>
                <Setter TargetName="HeaderHost" Property="Foreground" Value="{StaticResource clEnibFalse}"/>
                <Setter TargetName="InputGestureText" Property="Foreground" Value="{StaticResource clEnibFalse}"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="mc_border" Property="Background" Value="{StaticResource clSelectMenuItem}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type MenuItem}" TargetType="MenuItem">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="#FF080808"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource TopLevelHeader}"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource TopLevelItem}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource SubmenuHeader}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource SubmenuItem}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>