<UserControl x:Class="StyleCF.Control.TimeCf"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:StyleCF.Control"
             mc:Ignorable="d" Name="MyControlTime"
             d:DesignHeight="23" d:DesignWidth="150">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/StyleCF;component/Color.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="cfBTTime" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="ContentContainer" Background="Transparent" SnapsToDevicePixels="True" CornerRadius="6">
                                <ContentPresenter x:Name="Content" RecognizesAccessKey="True" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ContentContainer" Property="Background" Value="LightBlue"/>
                                </Trigger>
                                <Trigger Property="Button.IsDefaulted" Value="True">
                                    <Setter TargetName="ContentContainer" Property="Background" Value="LightBlue"/>
                                </Trigger>
                                <Trigger Property="ButtonBase.IsPressed" Value="True">
                                    <Setter TargetName="Content" Property="RenderTransform">
                                        <Setter.Value>
                                            <TranslateTransform Y="0.5"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                    <Setter TargetName="Content" Property="RenderTransform">
                                        <Setter.Value>
                                            <TranslateTransform Y="0.5"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground">
                                        <Setter.Value>
                                            <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="NotTextV" TargetType="{x:Type TextBoxBase}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border Name="Border" CornerRadius="5" Opacity="0.7" Padding="2" BorderThickness="1" Background="{x:Null}" BorderBrush="{x:Null}">
                                <ScrollViewer Margin="3,0" x:Name="PART_ContentHost"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource clEnibFalse1}"/>
                                    <Setter Property="Foreground" Value="{StaticResource clEnibFalse}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsFocused" Value="True"/>
                                        <Condition Property="IsEnabled" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource clBluNa04}"/>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.8"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter TargetName="Border" Property="Opacity" Value="1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <local:NotBoolConverter x:Key="NotBoolConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Border CornerRadius="10" Opacity="0.7" Padding="2" BorderThickness="1" Background="{DynamicResource clBackText}" BorderBrush="{DynamicResource clBrushText}">
            <Grid Margin="-3,-3,0,-3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" CornerRadius="10" Margin="1" Background="{DynamicResource clBackText}" BorderBrush="{DynamicResource clBrushText}" BorderThickness="0,0,1,0">
                    <StackPanel Orientation="Horizontal" DataContext="{Binding ElementName=MyControlTime, Path=SelectedTime, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox x:Name="PART_HourTextBox" MaxLength="2" IsReadOnly="True" Margin="7,0,2,0" Style="{StaticResource NotTextV}" Text="{Binding Hours, Mode=OneWay, StringFormat=00, UpdateSourceTrigger=PropertyChanged}" Width="30" GotFocus="TextBox_GotFocus"/>
                        <TextBlock Text=":" VerticalAlignment="Center"/>
                        <TextBox x:Name="PART_MinuteTextBox" MaxLength="2" IsReadOnly="True" Margin="2,0" Style="{StaticResource NotTextV}" Text="{Binding Minutes, Mode=OneWay, StringFormat=00, UpdateSourceTrigger=PropertyChanged}" Width="30" GotFocus="TextBox_GotFocus"/>
                        <TextBlock Text=":" VerticalAlignment="Center"/>
                        <TextBox x:Name="PART_SecondTextBox" MaxLength="2" IsReadOnly="True" Margin="2,0" Style="{StaticResource NotTextV}" Text="{Binding Seconds, Mode=OneWay, StringFormat=00, UpdateSourceTrigger=PropertyChanged}" Width="30" GotFocus="TextBox_GotFocus"/>
                    </StackPanel>
                </Border>
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Button x:Name="PART_IncrementButton" Grid.Row="0" IsEnabled="{Binding ElementName=MyControlTime, Converter={StaticResource NotBoolConverter}, Path=IsReadOnly, UpdateSourceTrigger=PropertyChanged}" Margin="0,1,0,0.5" Style="{StaticResource cfBTTime}" Click="PART_IncrementButton_Click">
                        <TextBlock Text="p" FontFamily="Wingdings 3" FontSize="6" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Button>
                    <Button x:Name="PART_DecrementButton" Grid.Row="1" IsEnabled="{Binding ElementName=MyControlTime, Converter={StaticResource NotBoolConverter}, Path=IsReadOnly, UpdateSourceTrigger=PropertyChanged}" Margin="0,0.5,0,1" Width="20" Style="{StaticResource cfBTTime}" Click="PART_DecrementButton_Click">
                        <TextBlock Text="q" FontFamily="Wingdings 3" FontSize="6" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Button>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</UserControl>
